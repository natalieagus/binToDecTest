/*
    This file was generated automatically by Alchitry Labs 2.0.13-PREVIEW.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/
module multiSevenSeg #(
    parameter DIGITS = 3'h4,
    parameter DIV = 5'h10
  ) (
    input clk,
    input rst,
    input [(DIGITS * (4))-1:0] values,
    output reg [(7)-1:0] seg,
    output reg [(DIGITS)-1:0] sel
  );
  localparam DIGIT_BITS = $clog2(DIGITS);
  
  
  
  localparam _MP_SIZE_1531695558 = DIGIT_BITS;
  localparam _MP_DIV_1531695558 = DIV;
  localparam _MP_TOP_1531695558 = DIGITS - 1'h1;
  localparam _MP_UP_1531695558 = 1'h1;
  wire [(_MP_SIZE_1531695558)-1:0] M_ctr_value;
  
  counter #(
    .SIZE(_MP_SIZE_1531695558),
    .DIV(_MP_DIV_1531695558),
    .TOP(_MP_TOP_1531695558),
    .UP(_MP_UP_1531695558)
  ) ctr (
    .clk(clk),
    .rst(rst),
    .value(M_ctr_value)
  );
  
  reg [(4)-1:0] M_segDec_char;
  wire [(7)-1:0] M_segDec_segs;
  
  sevenSeg segDec (
    .char(M_segDec_char),
    .segs(M_segDec_segs)
  );
  
  localparam _MP_WIDTH_1630987564 = DIGIT_BITS;
  reg [(_MP_WIDTH_1630987564)-1:0] M_digit_dec_in;
  wire [({1'h1, {_MP_WIDTH_1630987564{1'h0}}})-1:0] M_digit_dec_out;
  
  decoder #(
    .WIDTH(_MP_WIDTH_1630987564)
  ) digit_dec (
    .in(M_digit_dec_in),
    .out(M_digit_dec_out)
  );
  
  
  always @* begin
    M_segDec_char = values[(M_ctr_value)*(4)+(4) - 1 -:(4)];
    seg = M_segDec_segs;
    M_digit_dec_in = M_ctr_value;
    sel = M_digit_dec_out;
  end
  
endmodule