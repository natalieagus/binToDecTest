/*
    This file was generated automatically by Alchitry Labs 2.0.13-PREVIEW.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/
module alchitryTop (
    input clk,
    input rst_n,
    output reg [(8)-1:0] led,
    input usbRx,
    output reg usbTx,
    output reg [(24)-1:0] ioLed,
    output reg [(8)-1:0] ioSeg,
    output reg [(4)-1:0] ioSel,
    input [(5)-1:0] ioButton,
    input [(24)-1:0] ioDip
  );
  
  
  reg rst;
  
  localparam _MP_STAGES_900146593 = 3'h4;
  reg M_resetCond_in;
  wire M_resetCond_out;
  
  resetConditioner #(
    .STAGES(_MP_STAGES_900146593)
  ) resetCond (
    .clk(clk),
    .in(M_resetCond_in),
    .out(M_resetCond_out)
  );
  
  localparam _MP_DIGITS_2133749339 = 3'h4;
  localparam _MP_DIV_2133749339 = 5'h10;
  reg [(16)-1:0] M_seg_values;
  wire [(7)-1:0] M_seg_seg;
  wire [(4)-1:0] M_seg_sel;
  
  multiSevenSeg #(
    .DIGITS(_MP_DIGITS_2133749339),
    .DIV(_MP_DIV_2133749339)
  ) seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  
  localparam _MP_DIGITS_1549087408 = 3'h4;
  localparam _MP_LEADING_ZEROS_1549087408 = 1'h0;
  reg [(14)-1:0] M_binToDecOriginal_value;
  wire [(16)-1:0] M_binToDecOriginal_digits;
  
  binToDec #(
    .DIGITS(_MP_DIGITS_1549087408),
    .LEADING_ZEROS(_MP_LEADING_ZEROS_1549087408)
  ) binToDecOriginal (
    .value(M_binToDecOriginal_value),
    .digits(M_binToDecOriginal_digits)
  );
  
  
  always @* begin
    M_resetCond_in = ~rst_n;
    rst = M_resetCond_out;
    led = 8'h0;
    usbTx = usbRx;
    M_binToDecOriginal_value = 4'h5;
    M_seg_values = 16'h4321;
    ioLed = 24'h0;
    if (ioDip[(1'h0)*(8)+(1'h0)]) begin
      M_seg_values = M_binToDecOriginal_digits;
      ioLed[(1'h0)*(8)+(8) - 1 -:(8)] = M_binToDecOriginal_digits[(1'h0)*(4)+(4) - 1 -:(4)];
      ioLed[(1'h1)*(8)+(8) - 1 -:(8)] = M_binToDecOriginal_digits[(1'h1)*(4)+(4) - 1 -:(4)];
      ioLed[(2'h2)*(8)+(8) - 1 -:(8)] = M_binToDecOriginal_digits[(2'h2)*(4)+(4) - 1 -:(4)];
    end
    ioSeg = ~M_seg_seg;
    ioSel = ~M_seg_sel;
  end
  
endmodule